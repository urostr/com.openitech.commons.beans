/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDbFilePanel.java
 *
 * Created on 23.10.2011, 19:38:38
 */
package com.openitech.db.components;

import com.openitech.db.model.DataSourceObserver;
import com.openitech.db.model.DbDataSource;
import com.openitech.db.model.factory.ClassInstanceFactory.Custom;
import com.openitech.xml.binarymodel.BinaryModel.Attributes;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author domenbasic
 */
public class JDbFilePanel extends javax.swing.JPanel implements DataSourceObserver, Custom{

  private  DbDataSource dataSource;
  private  String columnName;
  private  Attributes attributes;

  /** Creates new form JDbFilePanel */
  public JDbFilePanel(String columnName) {
    initComponents();
    this.columnName = columnName;
    jtfFileName.setColumnName(columnName + "FileName");
    
  }

  public void setColumnLength(Integer columnLength) {
    jtfFileName.setColumns(columnLength);
  }
  private boolean ignoreSelectAll = false;

  /**
   * Get the value of ignoreSelectAll
   *
   * @return the value of ignoreSelectAll
   */
  public boolean isIgnoreSelectAll() {
    return ignoreSelectAll;
  }

  /**
   * Set the value of ignoreSelectAll
   *
   * @param ignoreSelectAll new value of ignoreSelectAll
   */
  public void setIgnoreSelectAll(boolean ignoreSelectAll) {
    this.ignoreSelectAll = ignoreSelectAll;
    jtfFileName.setIgnoreSelectAll(ignoreSelectAll);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    fc = new javax.swing.JFileChooser();
    jtfFileName = new com.openitech.db.components.JDbTextField();
    jbChoose = new javax.swing.JButton();
    jbOpen = new javax.swing.JButton();

    setLayout(new java.awt.GridBagLayout());

    jtfFileName.setColumns(20);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 0.5;
    add(jtfFileName, gridBagConstraints);

    jbChoose.setText("Choose");
    jbChoose.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbChooseActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    add(jbChoose, gridBagConstraints);

    jbOpen.setText("Open");
    jbOpen.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbOpenActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    add(jbOpen, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

    private void jbOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOpenActionPerformed
      //
      FileOutputStream fo = null;
      try {
        String storedFileName = dataSource.getString(columnName + "FileName");
        if (storedFileName != null) {
          byte[] bytes = dataSource.getBytes(columnName);
          if (bytes != null) {
            String filename = System.getProperty("java.io.tmpdir") + System.getProperty("file.separator") + Calendar.getInstance().getTimeInMillis() + "_" + storedFileName;
            java.io.File file = new java.io.File(filename);
//                  if (!System.getProperty("os.name").equals("Linux")) {
//                    file.deleteOnExit();
//                  }
            fo = new FileOutputStream(file);
            fo.write(bytes);
            fo.close();

            if (file.exists()) {
              if (Desktop.getDesktop().isSupported(Desktop.Action.OPEN)) {
                Desktop.getDesktop().open(file);
              }
            }
          }
        }
      } catch (Exception ex) {
        Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).log(Level.SEVERE, null, ex);
      }

      //
    }//GEN-LAST:event_jbOpenActionPerformed

    private void jbChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbChooseActionPerformed
      //
      int returnVal = fc.showOpenDialog(null);
      if (returnVal == JFileChooser.APPROVE_OPTION) {
        File openFile = fc.getSelectedFile();
        try {
          dataSource.updateString(columnName + "FileName", openFile.getName());
          FileInputStream fi = new FileInputStream(openFile);
          byte[] bytes = new byte[(int) openFile.length()];

          fi.read(bytes);

          dataSource.updateBytes(columnName, bytes);


        } catch (Exception ex) {
          Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).log(Level.SEVERE, null, ex);
        }
      }
      //
    }//GEN-LAST:event_jbChooseActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JFileChooser fc;
  private javax.swing.JButton jbChoose;
  private javax.swing.JButton jbOpen;
  private com.openitech.db.components.JDbTextField jtfFileName;
  // End of variables declaration//GEN-END:variables

  @Override
  public DbDataSource getDataSource() {
    return dataSource;
  }

  @Override
  public void setDataSource(DbDataSource dataSource) {
    this.dataSource = dataSource;

    jtfFileName.setDataSource(dataSource);
  }
}
