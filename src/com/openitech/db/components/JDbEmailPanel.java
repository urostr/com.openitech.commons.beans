/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDbEmailPanel.java
 *
 * Created on 24.10.2011, 8:44:05
 */
package com.openitech.db.components;

import com.openitech.db.model.DbDataSource;
import java.awt.Desktop;
import java.net.URI;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author domenbasic
 */
public class JDbEmailPanel extends javax.swing.JPanel {

  private final DbDataSource dataSource;
  private final String columnName;

  /** Creates new form JDbEmailPanel */
  public JDbEmailPanel(DbDataSource dataSource, String columnName) {
    this.dataSource = dataSource;
    this.columnName = columnName;
    initComponents();

    jtfEmail.setColumnName(columnName);
    jtfEmail.setDataSource(dataSource);
  }

  public void setColumnLength(Integer columnLength) {
    jtfEmail.setColumns(columnLength);
  }
  private boolean ignoreSelectAll = false;

  /**
   * Get the value of ignoreSelectAll
   *
   * @return the value of ignoreSelectAll
   */
  public boolean isIgnoreSelectAll() {
    return ignoreSelectAll;
  }

  /**
   * Set the value of ignoreSelectAll
   *
   * @param ignoreSelectAll new value of ignoreSelectAll
   */
  public void setIgnoreSelectAll(boolean ignoreSelectAll) {
    this.ignoreSelectAll = ignoreSelectAll;
    jtfEmail.setIgnoreSelectAll(ignoreSelectAll);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jtfEmail = new com.openitech.db.components.JDbTextField();
    jbSendEmail = new javax.swing.JButton();

    setLayout(new java.awt.GridBagLayout());

    jtfEmail.setColumns(15);
    add(jtfEmail, new java.awt.GridBagConstraints());

    jbSendEmail.setText("Email");
    jbSendEmail.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbSendEmailActionPerformed(evt);
      }
    });
    add(jbSendEmail, new java.awt.GridBagConstraints());
  }// </editor-fold>//GEN-END:initComponents

    private void jbSendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSendEmailActionPerformed
      //
      try {
        final String email = jtfEmail.getText();
        if (email != null && email.length() > 0) {
          Desktop.getDesktop().mail(new URI("mailto", email, null));
        }
      } catch (Exception ex) {
        Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).log(Level.SEVERE, null, ex);
      }
      //
    }//GEN-LAST:event_jbSendEmailActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jbSendEmail;
  private com.openitech.db.components.JDbTextField jtfEmail;
  // End of variables declaration//GEN-END:variables
}
