/*
 * JWProgressMonitor.java
 *
 * Created on Nedelja, 11 junij 2006, 11:57
 */

package com.openitech.components;

import java.awt.EventQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 *
 * @author  uros
 */
public class JWProgressMonitor extends javax.swing.JDialog {
  private final static  ExecutorService tpes = Executors.newFixedThreadPool(1);
  
  /** Creates new form JWProgressMonitor */
  public JWProgressMonitor(java.awt.Frame owner) {
    super(owner,true);
    setUndecorated(true);
    initComponents();
    setLocationRelativeTo(owner);
  }
  
  public JWProgressMonitor(java.awt.Dialog owner) {
    super(owner,true);
    setUndecorated(true);
    initComponents();
    setLocationRelativeTo(owner);
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents() {
    jPanel1 = new javax.swing.JPanel();
    jlTitle = new javax.swing.JLabel();
    jlPage = new javax.swing.JLabel();
    jProgressBar = new javax.swing.JProgressBar();

    setAlwaysOnTop(true);
    setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
    jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jlTitle.setText("Stran");

    org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(org.jdesktop.layout.GroupLayout.TRAILING, jProgressBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
          .add(jPanel1Layout.createSequentialGroup()
            .add(jlTitle)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jlPage)))
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jlTitle)
          .add(jlPage))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(jProgressBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents
  
  int progress = 0;
  
  public void setMin(int min) {
    jProgressBar.setMinimum(min);
  }

  public int getMin() {
    return jProgressBar.getMinimum();
  }

  public void setMax(int max) {
    if (max==0)
      jlPage.setText("");
    jProgressBar.setMaximum(max);
  }

  public int getMax() {
    return jProgressBar.getMaximum();
  }

  public int getProgress() {
    return jProgressBar.getValue();
  }
  
  public void setProgress(int progress) {
    this.progress = progress;
    jlPage.setText(jProgressBar.getMaximum()<1?"":Integer.toString(progress)+"/"+Integer.toString(jProgressBar.getMaximum()));
    jProgressBar.setValue(progress);
    this.repaint();
  }
  
  public void next() {
    setProgress(++progress);
  }

  public void setTitle(String title) {
    jlTitle.setText(title);
  }
  
  public String getTitle() {
    return jlTitle.getText();
  }

  public void setVisible(final boolean b) {
    EventQueue.invokeLater(new Runnable() {
      public void run() {
        inheritedVisible(b);
      }
    });
  }
  
  private final void inheritedVisible(boolean b) {
    super.setVisible(b);
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel jPanel1;
  private javax.swing.JProgressBar jProgressBar;
  private javax.swing.JLabel jlPage;
  private javax.swing.JLabel jlTitle;
  // End of variables declaration//GEN-END:variables
  
}
