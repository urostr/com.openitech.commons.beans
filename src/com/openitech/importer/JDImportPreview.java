/*
 * JDImportPreview.java
 *
 * Created on Torek, 11 marec 2008, 14:26
 */

package com.openitech.importer;

import com.openitech.db.components.JDbTable;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author  NatasaBosnjakovic
 */
public class JDImportPreview extends javax.swing.JDialog {
    private static JDImportPreview instance;
    
    private ImportPreviewModel activeImporter = null;
    
    /** Creates new form JDImportPreview */
    private JDImportPreview(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.pack();
        this.setLocationRelativeTo(parent);
        this.getRootPane().setDefaultButton(jbCancelImport);
    }
    
    public static JDImportPreview getInstance(java.awt.Frame parent) {
        if (instance==null) {
            instance = new JDImportPreview(parent, true);
        }
        return instance;
    }

    public void setActiveImporter(ImportPreviewModel activeImporter) {
        if (!com.openitech.util.Equals.equals(this.activeImporter,activeImporter)) {
            this.activeImporter = activeImporter;
            jtImportPreview.setModel(activeImporter.preview());
        }
    }

    public ImportPreviewModel getActiveImporter() {
        return activeImporter;
    }

    public JDbTable getJtImportPreview() {
        return jtImportPreview;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane2 = new javax.swing.JScrollPane();
    jtImportPreview = new com.openitech.db.components.JDbTable();
    jPanel1 = new javax.swing.JPanel();
    jbCancelImport = new javax.swing.JButton();
    jbSaveImport = new javax.swing.JButton();

    setTitle("Pregled podatkov");
    setLocationByPlatform(true);

    jtImportPreview.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    jScrollPane2.setViewportView(jtImportPreview);

    getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

    jbCancelImport.setText("Preklièi");
    jbCancelImport.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbCancelImportActionPerformed(evt);
      }
    });

    jbSaveImport.setText("Shrani podatke");
    jbSaveImport.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbSaveImportActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addContainerGap(390, Short.MAX_VALUE)
        .addComponent(jbSaveImport)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jbCancelImport)
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jbCancelImport)
          .addComponent(jbSaveImport))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents
    
    private void jbSaveImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveImportActionPerformed
// TODO add your handling code here:
        if (activeImporter!=null) {
          this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
            try {
                activeImporter.save();
            } catch (SQLException ex) {
                Logger.getLogger(JDImportPreview.class.getName()).log(Level.SEVERE, "Error storing the updated record.", ex);
                StringBuilder message = new StringBuilder();
                message.append("Napaka pri shranjevanju podatkov!\n\n");
                message.append(ex.getSQLState()).append(ex.getErrorCode()).append(" : ").append(ex.getMessage());
                JOptionPane.showMessageDialog(this, message.toString(), "Napaka", JOptionPane.ERROR_MESSAGE);
            }
          this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            activeImporter = null;
            this.setVisible(false);
        }
    }//GEN-LAST:event_jbSaveImportActionPerformed
    
    private void jbCancelImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelImportActionPerformed
// TODO add your handling code here:
        if (activeImporter!=null) {
            activeImporter.cancel();
            activeImporter = null;
            this.setVisible(false);
        }
    }//GEN-LAST:event_jbCancelImportActionPerformed
    
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JButton jbCancelImport;
  private javax.swing.JButton jbSaveImport;
  private com.openitech.db.components.JDbTable jtImportPreview;
  // End of variables declaration//GEN-END:variables
    
}
